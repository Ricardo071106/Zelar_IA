import pkg from 'whatsapp-web.js';
const { Client, NoAuth } = pkg;
import qrcode from 'qrcode-terminal';

console.log('ðŸš€ Iniciando WhatsApp Business - VersÃ£o Simplificada');

const client = new Client({
    authStrategy: new NoAuth(),
    puppeteer: {
        headless: false,
        args: [
            '--no-sandbox',
            '--disable-setuid-sandbox',
            '--disable-dev-shm-usage',
            '--disable-gpu',
            '--disable-web-security',
            '--disable-features=VizDisplayCompositor'
        ]
    }
});

// QR Code para conexÃ£o
client.on('qr', (qr) => {
    console.log('\n=== ESCANEIE O QR CODE ===');
    qrcode.generate(qr, {small: true});
    console.log('\nCÃ³digo para backup:');
    console.log(qr);
    console.log('\nEscaneie com WhatsApp Business');
});

// ConexÃ£o estabelecida
client.on('ready', () => {
    console.log('\nâœ… WhatsApp conectado com sucesso!');
    console.log('ðŸ¤– Bot ativo - processando mensagens');
});

// Processamento de mensagens
client.on('message', async (message) => {
    if (message.fromMe) return;
    
    const userMessage = message.body.toLowerCase();
    const userName = message._data.notifyName || 'Cliente';
    
    console.log(`ðŸ“© Mensagem de ${userName}: ${message.body}`);
    
    // Detectar eventos simples
    if (userMessage.includes('reuniÃ£o') || userMessage.includes('consulta') || 
        userMessage.includes('evento') || userMessage.includes('compromisso')) {
        
        const response = `OlÃ¡ ${userName}! ðŸ‘‹

Entendi que vocÃª quer agendar algo. 

*Para criar seu evento no calendÃ¡rio:*

ðŸ“… *Google Calendar:*
https://calendar.google.com/calendar/render?action=TEMPLATE&text=Evento+Zelar

ðŸ“… *Outlook:*
https://outlook.live.com/calendar/0/deeplink/compose?subject=Evento+Zelar

ðŸ“… *Apple Calendar:*
Clique para baixar arquivo ICS

_Processado automaticamente pelo Zelar Assistant_`;

        await message.reply(response);
        console.log(`âœ… Resposta enviada para ${userName}`);
    } else {
        // Resposta padrÃ£o
        const response = `OlÃ¡! Sou o *Zelar Assistant* ðŸ¤–

Para agendar eventos, envie mensagens como:
â€¢ "ReuniÃ£o amanhÃ£ Ã s 14h"  
â€¢ "Consulta mÃ©dica sexta-feira"
â€¢ "Evento importante na segunda"

Como posso ajudar vocÃª hoje?`;

        await message.reply(response);
    }
});

client.on('disconnected', (reason) => {
    console.log('ðŸ“´ Desconectado:', reason);
});

client.initialize();